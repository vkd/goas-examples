// Code is generated by goas. DO NOT EDIT!

package handlers

import (
	"encoding/json"
	"net/http"
)

// PetsPetIDGetFunc ...
type PetsPetIDGetFunc func(PetsPetIDGetRequest) PetsPetIDGetResponser

// PetsPetIDGetHandlerFunc ...
func PetsPetIDGetHandlerFunc(fn PetsPetIDGetFunc) http.HandlerFunc {
	return func(w http.ResponseWriter, r *http.Request) {
		var req PetsPetIDGetRequest
		var err error
		_ = err

		fn(req).write(w)
	}
}

// PetsPetIDGetErrorHandler ...
var PetsPetIDGetErrorHandler = ErrorHandler

// PetsPetIDGetRequest ...
type PetsPetIDGetRequest struct {
	Path struct {
		PetID string
	}
}

// PetsPetIDGetResponser ...
type PetsPetIDGetResponser interface {
	write(http.ResponseWriter)
	petspetidgetresponseinterface()
}

// PetsPetIDGetResponseJSON200 ...
func PetsPetIDGetResponseJSON200(resp Pet) PetsPetIDGetResponser {
	var w petsPetIDGetJSONResponse
	w.StatusCode = 200
	w.Obj = resp
	return w
}

// PetsPetIDGetResponseJSONDefault ...
func PetsPetIDGetResponseJSONDefault(resp Error) PetsPetIDGetResponser {
	var w petsPetIDGetJSONResponse
	w.Obj = resp
	return w
}

// --- Response interface ---

type petsPetIDGetJSONResponse struct {
	StatusCode int
	Obj        interface{}
}

var _ PetsPetIDGetResponser = (*petsPetIDGetJSONResponse)(nil)

func (rw petsPetIDGetJSONResponse) petspetidgetresponseinterface() {}

func (rw petsPetIDGetJSONResponse) write(w http.ResponseWriter) {
	w.WriteHeader(rw.StatusCode)
	err := json.NewEncoder(w).Encode(rw.Obj)
	if err != nil {
		JSONError(err)
	}
}
