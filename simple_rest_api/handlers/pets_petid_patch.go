// Code is generated by goas. DO NOT EDIT!

package handlers

import (
	"encoding/json"
	"net/http"
)

// PetsPetIDPatchFunc ...
type PetsPetIDPatchFunc func(PetsPetIDPatchRequest) PetsPetIDPatchResponser

// PetsPetIDPatchHandlerFunc ...
func PetsPetIDPatchHandlerFunc(fn PetsPetIDPatchFunc) http.HandlerFunc {
	return func(w http.ResponseWriter, r *http.Request) {
		var req PetsPetIDPatchRequest
		var err error
		_ = err

		err = json.NewDecoder(r.Body).Decode(&req.Body)
		if err != nil {
			PetsPetIDPatchErrorHandler(w, r, JSONDecodeError{Err: err})
			return
		}

		fn(req).write(w)
	}
}

// PetsPetIDPatchErrorHandler ...
var PetsPetIDPatchErrorHandler = ErrorHandler

// PetsPetIDPatchRequest ...
type PetsPetIDPatchRequest struct {
	Path struct {
		PetID string
	}
	Body PetPatchBody
}

// PetsPetIDPatchResponser ...
type PetsPetIDPatchResponser interface {
	write(http.ResponseWriter)
	petspetidpatchresponseinterface()
}

// PetsPetIDPatchResponseJSON200 ...
func PetsPetIDPatchResponseJSON200(resp Pet) PetsPetIDPatchResponser {
	var w petsPetIDPatchJSONResponse
	w.StatusCode = 200
	w.Obj = resp
	return w
}

// PetsPetIDPatchResponseJSONDefault ...
func PetsPetIDPatchResponseJSONDefault(resp Error) PetsPetIDPatchResponser {
	var w petsPetIDPatchJSONResponse
	w.Obj = resp
	return w
}

// --- Response interface ---

type petsPetIDPatchJSONResponse struct {
	StatusCode int
	Obj        interface{}
}

var _ PetsPetIDPatchResponser = (*petsPetIDPatchJSONResponse)(nil)

func (rw petsPetIDPatchJSONResponse) petspetidpatchresponseinterface() {}

func (rw petsPetIDPatchJSONResponse) write(w http.ResponseWriter) {
	w.WriteHeader(rw.StatusCode)
	err := json.NewEncoder(w).Encode(rw.Obj)
	if err != nil {
		JSONError(err)
	}
}
