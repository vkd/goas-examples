openapi: 3.0.0
info:
  title: simple_rest_api
  version: "v1.0"
components:
  parameters:
    PetID:
      name: petID
      in: path
      required: true
      description: The id of the pet to retrieve
      schema:
        type: string
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Pet:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    PetCreateBody:
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: string
    PetPatchBody:
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: string
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
            example: Bearer hello_token
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PetCreateBody"
      responses:
        201:
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petID}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - $ref: "#/components/parameters/PetID"
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Change pet
      operationId: patchPetById
      tags:
        - pets
      parameters:
        - $ref: "#/components/parameters/PetID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PetPatchBody"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete pet
      operationId: deletePetById
      tags:
        - pets
      parameters:
        - $ref: "#/components/parameters/PetID"
      responses:
        200:
          description: null response
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
